# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-docker-hub

name: Publish Docker image with Avahi on remote release

on:
  schedule:
    - cron: '0 0 * * *'  # Run every day at midnight

jobs:
  check-releases:
    runs-on: ubuntu-latest

    steps:
      - name: Check for new releases
        id: check-releases
        run: |
          REMOTE_LATEST_RELEASE=$(curl -s "https://api.github.com/repos/esphome/esphome/releases/latest" | jq -r .tag_name)
          LOCAL_LATEST_RELEASE=$(curl -s "https://api.github.com/repos/vxav/esphome-avahi/releases/latest" | jq -r .tag_name)

          # Check if the request was successful
          if [ $? -eq 0 ]; then
            if [ "$REMOTE_LATEST_RELEASE" != "$LOCAL_LATEST_RELEASE" ]; then
              echo "New release detected: $REMOTE_LATEST_RELEASE"
              echo "::set-output name=new_release::true"
            else
              echo "No new releases"
              echo "::set-output name=new_release::false"
            fi
          else
            echo "Failed to fetch release information"
            echo "::set-output name=new_release::false"
          fi

  build-and-push-image:
    needs: check-releases
    runs-on: ubuntu-latest
    if: ${{ needs.check-releases.outputs.new_release == 'true' }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: vxav/esphome-avahi
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            "RELEASE=${{ steps.meta.outputs.version }}"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}